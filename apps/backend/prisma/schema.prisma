generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  password     String
  refreshToken String?
  createdAt    DateTime @default(now())
  customDomain String?

  profile     Profile?
  urlsCreated Url[]    @relation("UserCreatedUrls")
}

model Profile {
  id        String  @id @default(uuid())
  userId    String  @unique
  name      String?
  avatarUrl String?
  bio       String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Url {
  id          String    @id @default(uuid())
  originalUrl String
  shortUrl    String    @unique
  clicks      Int       @default(0)
  expiredAt   DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  domain      String?

  utmId String?
  utm   UTM?    @relation(fields: [utmId], references: [id], onDelete: SetNull)

  createdById String?
  createdBy   User?   @relation("UserCreatedUrls", fields: [createdById], references: [id], onDelete: SetNull)

  clicksLog Click[]

  @@index([createdById])
  @@index([utmId])
}

model Click {
  id        String   @id @default(uuid())
  urlId     String
  ip        String   @default("")
  userAgent String   @default("")
  timestamp DateTime @default(now())

  url Url @relation(fields: [urlId], references: [id], onDelete: Cascade)

  @@index([urlId])
}

model UTM {
  id       String  @id @default(uuid())
  source   String?
  medium   String?
  campaign String?
  term     String?
  content  String?
  ref      String?

  urls Url[]
}
