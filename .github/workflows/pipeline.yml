name: Full Deploy (Terraform first + real backend zip)

on:
  push:
    branches: [main]
    paths:
      - "apps/backend/**"
      - "apps/client/**"
      - "infra/**"
      - ".github/workflows/deploy.yml"

jobs:
  full-deploy:
    runs-on: ubuntu-latest

    steps:
      # --- Checkout code ---
      - name: Checkout code
        uses: actions/checkout@v4

      # --- Setup Node.js and PNPM ---
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install PNPM globally
        run: npm install -g pnpm

      # --- Build Backend Lambda before Terraform ---
      - name: Install backend dependencies
        working-directory: ./apps/backend
        run: pnpm install

      - name: Generate Prisma Client
        working-directory: ./apps/backend
        run: pnpm exec prisma generate

      - name: Build backend (NestJS)
        working-directory: ./apps/backend
        run: pnpm run build

      - name: Package backend into Lambda ZIP
        working-directory: ./apps/backend
        run: |
          pnpm install --prod
          mkdir -p build
          zip -r build/function.zip dist node_modules package.json

      # --- Terraform Deploy Infrastructure ---
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.7"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Terraform Init
        working-directory: ./infra
        run: terraform init

      - name: Terraform Validate
        working-directory: ./infra
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./infra
        run: terraform plan -out=tfplan -var="DATABASE_URL=${{ secrets.DATABASE_URL }}"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        working-directory: ./infra
        run: terraform apply -auto-approve tfplan

      # --- Build and Deploy Frontend Astro Site ---
      - name: Install frontend dependencies
        working-directory: ./apps/client
        run: pnpm install

      - name: Build Astro frontend
        working-directory: ./apps/client
        run: pnpm run build

      - name: Sync Astro build to S3
        run: aws s3 sync ./apps/client/dist "s3://${{ secrets.S3_BUCKET_NAME }}" --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
