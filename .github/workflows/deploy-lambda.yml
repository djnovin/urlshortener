name: Deploy NestJS Lambda with Node 20 and PNPM

on:
  push:
    branches: [main]
    paths:
      - "apps/backend/**"
      - ".github/workflows/deploy-lambda.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 20 and enable Corepack
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Enable Corepack and Prepare PNPM
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate
          npm install -g pnpm

      - name: Install dependencies using Corepack
        run: corepack pnpm install

      - name: ðŸ”§ Generate Prisma Client
        working-directory: ./apps/backend
        run: corepack pnpm prisma generate

      - name: Build NestJS backend
        working-directory: ./apps/backend
        run: corepack pnpm run build

      - name: Package Lambda
        working-directory: ./apps/backend
        run: |
          corepack pnpm install --prod
          zip -r function.zip dist node_modules package.json

      - name: Deploy to AWS Lambda
        working-directory: ./apps/backend
        run: |
          aws lambda update-function-code \
            --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} \
            --zip-file fileb://function.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
